// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// StringType ...
type StringType string

// DescriptionStringType ...
type DescriptionStringType string

// CpuNameType ...
type CpuNameType string

// RevisionType ...
type RevisionType string

// EndianType ...
type EndianType string

// DataTypeType ...
type DataTypeType string

// DimableIdentifierType ...
type DimableIdentifierType string

// IdentifierType ...
type IdentifierType string

// ProtectionStringType ...
type ProtectionStringType string

// SauAccessType ...
type SauAccessType string

// DimIndexType ...
type DimIndexType string

// ScaledNonNegativeInteger ...
type ScaledNonNegativeInteger string

// EnumeratedValueDataType ...
type EnumeratedValueDataType string

// AccessType ...
type AccessType string

// ModifiedWriteValuesType ...
type ModifiedWriteValuesType string

// ReadActionType ...
type ReadActionType string

// EnumUsageType ...
type EnumUsageType string

// BitRangeType ...
type BitRangeType string

// Range ...
type Range struct {
	XMLName xml.Name
	Minimum string   `xml:"minimum"`
	Maximum string   `xml:"maximum"`
}

// WriteConstraintType ...
type WriteConstraintType struct {
	XMLName xml.Name
	WriteAsRead         bool     `xml:"writeAsRead"`
	UseEnumeratedValues bool     `xml:"useEnumeratedValues"`
	Range               *Range   `xml:"range"`
}

// AddressBlockType ...
type AddressBlockType struct {
	XMLName xml.Name
	Offset     string   `xml:"offset"`
	Size       string   `xml:"size"`
	Usage      string   `xml:"usage"`
	Protection string   `xml:"protection"`
}

// InterruptType ...
type InterruptType struct {
	XMLName xml.Name
	Name        string   `xml:"name"`
	Description string   `xml:"description"`
	Value       int      `xml:"value"`
}

// Usage ...
type Usage string

// RegisterPropertiesGroup ...
type RegisterPropertiesGroup struct {
	XMLName xml.Name
	Size       string  `xml:"size"`
	Access     string  `xml:"access"`
	Protection string  `xml:"protection"`
	ResetValue string  `xml:"resetValue"`
	ResetMask  string  `xml:"resetMask"`
}

// BitRangeLsbMsbStyle ...
type BitRangeLsbMsbStyle struct {
	XMLName xml.Name
	Lsb     string `xml:"lsb"`
	Msb     string `xml:"msb"`
}

// BitRangeOffsetWidthStyle ...
type BitRangeOffsetWidthStyle struct {
	XMLName xml.Name
	BitOffset string `xml:"bitOffset"`
	BitWidth  string `xml:"bitWidth"`
}

// DimElementGroup ...
type DimElementGroup struct {
	XMLName xml.Name
	Dim           string `xml:"dim"`
	DimIncrement  string `xml:"dimIncrement"`
	DimIndex      string `xml:"dimIndex"`
	DimName       string `xml:"dimName"`
	DimArrayIndex *DimArrayIndexType
}

// Region ...
type Region struct {
	XMLName xml.Name
	EnabledAttr bool     `xml:"enabled,attr,omitempty"`
	NameAttr    string   `xml:"name,attr,omitempty"`
	Base        string   `xml:"base"`
	Limit       string   `xml:"limit"`
	Access      string   `xml:"access"`
}

// SauRegionsConfig ...
type SauRegionsConfig struct {
	XMLName xml.Name
	EnabledAttr                bool      `xml:"enabled,attr,omitempty"`
	ProtectionWhenDisabledAttr string    `xml:"protectionWhenDisabled,attr,omitempty"`
	Region                     []*Region `xml:"region"`
}

// CpuType ...
type CpuType struct {
	XMLName xml.Name
	Name                string            `xml:"name"`
	Revision            string            `xml:"revision"`
	Endian              string            `xml:"endian"`
	MpuPresent          bool              `xml:"mpuPresent"`
	FpuPresent          bool              `xml:"fpuPresent"`
	FpuDP               bool              `xml:"fpuDP"`
	DspPresent          bool              `xml:"dspPresent"`
	IcachePresent       bool              `xml:"icachePresent"`
	DcachePresent       bool              `xml:"dcachePresent"`
	ItcmPresent         bool              `xml:"itcmPresent"`
	DtcmPresent         bool              `xml:"dtcmPresent"`
	VtorPresent         bool              `xml:"vtorPresent"`
	NvicPrioBits        string            `xml:"nvicPrioBits"`
	VendorSystickConfig bool              `xml:"vendorSystickConfig"`
	DeviceNumInterrupts string            `xml:"deviceNumInterrupts"`
	SauNumRegions       string            `xml:"sauNumRegions"`
	SauRegionsConfig    *SauRegionsConfig `xml:"sauRegionsConfig"`
}

// EnumeratedValueType ...
type EnumeratedValueType struct {
	XMLName xml.Name
	Name        string   `xml:"name"`
	Description string   `xml:"description"`
	Value       string   `xml:"value"`
	IsDefault   bool     `xml:"isDefault"`
}

// EnumerationType ...
type EnumerationType struct {
	XMLName xml.Name
	DerivedFromAttr string                 `xml:"derivedFrom,attr,omitempty"`
	Name            string                 `xml:"name"`
	HeaderEnumName  string                 `xml:"headerEnumName"`
	Usage           string                 `xml:"usage"`
	EnumeratedValue []*EnumeratedValueType `xml:"enumeratedValue"`
}

// DimArrayIndexType ...
type DimArrayIndexType struct {
	XMLName xml.Name
	HeaderEnumName  string                 `xml:"headerEnumName"`
	EnumeratedValue []*EnumeratedValueType `xml:"enumeratedValue"`
}

// FieldType ...
type FieldType struct {
	XMLName xml.Name
	DerivedFromAttr          string   `xml:"derivedFrom,attr,omitempty"`
	//DimElementGroup          *DimElementGroup
	//type DimElementGroup struct {
	//	XMLName xml.Name
		Dim           string `xml:"dim"`
		DimIncrement  string `xml:"dimIncrement"`
		DimIndex      string
		DimName       string
		DimArrayIndex *DimArrayIndexType
	//}
	//BitRangeLsbMsbStyle      *BitRangeLsbMsbStyle
	//type BitRangeLsbMsbStyle struct {
	//	XMLName xml.Name
		Lsb     string `xml:"lsb"`
		Msb     string `xml:"msb"`
	//}
	//BitRangeOffsetWidthStyle *BitRangeOffsetWidthStyle
	//type BitRangeOffsetWidthStyle struct {
	//	XMLName xml.Name
		BitOffset string `xml:"bitOffset"`
		BitWidth  string `xml:"bitWidth"`
	//}
	Name                     string               `xml:"name"`
	Description              string               `xml:"description"`
	BitRange                 string               `xml:"bitRange"`
	Access                   string               `xml:"access"`
	ModifiedWriteValues      string               `xml:"modifiedWriteValues"`
	WriteConstraint          *WriteConstraintType `xml:"writeConstraint"`
	ReadAction               string               `xml:"readAction"`
	EnumeratedValues         []*EnumerationType   `xml:"enumeratedValues"`
}

// FieldsType ...
type FieldsType struct {
	XMLName xml.Name
	Field   []*FieldType `xml:"field"`
}

// RegisterType ...
type RegisterType struct {
	XMLName xml.Name
	DerivedFromAttr         string   `xml:"derivedFrom,attr,omitempty"`
	//DimElementGroup         *DimElementGroup
	//type DimElementGroup struct {
	//	XMLName xml.Name
		Dim           string `xml:"dim"`
		DimIncrement  string `xml:"dimIncrement"`
		DimIndex      string `xml:"dimIndex"`
		DimName       string `xml:"dimName"`
		DimArrayIndex *DimArrayIndexType
	//}
	//RegisterPropertiesGroup *RegisterPropertiesGroup
	//type RegisterPropertiesGroup struct {
	//	XMLName xml.Name
		Size       string  `xml:"size"`
		Access     string  `xml:"access"`
		Protection string  `xml:"protection"`
		ResetValue string  `xml:"resetValue"`
		ResetMask  string  `xml:"resetMask"`
	//}
	Name                    string               `xml:"name"`
	DisplayName             string               `xml:"displayName"`
	Description             string               `xml:"description"`
	AlternateGroup          string               `xml:"alternateGroup"`
	AlternateRegister       string               `xml:"alternateRegister"`
	AddressOffset           string               `xml:"addressOffset"`
	DataType                string               `xml:"dataType"`
	ModifiedWriteValues     string               `xml:"modifiedWriteValues"`
	WriteConstraint         *WriteConstraintType `xml:"writeConstraint"`
	ReadAction              string               `xml:"readAction"`
	Fields                  *FieldsType          `xml:"fields"`
}

// ClusterType ...
type ClusterType struct {
	XMLName xml.Name
	DerivedFromAttr         string   `xml:"derivedFrom,attr,omitempty"`
	DimElementGroup         *DimElementGroup
	RegisterPropertiesGroup *RegisterPropertiesGroup
	Name                    string          `xml:"name"`
	Dim           			string 			`xml:"dim"`
	DimIncrement 			string 			`xml:"dimIncrement"`
	Description             string          `xml:"description"`
	AlternateCluster        string          `xml:"alternateCluster"`
	HeaderStructName        string          `xml:"headerStructName"`
	AddressOffset           string          `xml:"addressOffset"`
	Register                []*RegisterType `xml:"register"`
	Cluster                 []*ClusterType  `xml:"cluster"`
}

// RegistersType ...
type RegistersType struct {
	XMLName xml.Name
	Cluster  []*ClusterType  `xml:"cluster"`
	Register []*RegisterType `xml:"register"`
}

// PeripheralType ...
type PeripheralType struct {
	XMLName xml.Name
	DerivedFromAttr         string   `xml:"derivedFrom,attr,omitempty"`
	DimElementGroup         *DimElementGroup
	RegisterPropertiesGroup *RegisterPropertiesGroup
	Name                    string              `xml:"name"`
	Version                 string              `xml:"version"`
	Description             string              `xml:"description"`
	AlternatePeripheral     string              `xml:"alternatePeripheral"`
	GroupName               string              `xml:"groupName"`
	PrependToName           string              `xml:"prependToName"`
	AppendToName            string              `xml:"appendToName"`
	HeaderStructName        string              `xml:"headerStructName"`
	DisableCondition        string              `xml:"disableCondition"`
	BaseAddress             string              `xml:"baseAddress"`
	AddressBlock            []*AddressBlockType `xml:"addressBlock"`
	Interrupt               []*InterruptType    `xml:"interrupt"`
	Registers               *RegistersType      `xml:"registers"`
}

// Peripherals ...
type Peripherals struct {
	XMLName xml.Name
	Peripheral []*PeripheralType `xml:"peripheral"`
}

// VendorExtensions ...
type VendorExtensions struct {
	XMLName xml.Name
}

// Device ...
type Device struct {
	XMLName xml.Name
	SchemaVersionAttr       float64  `xml:"schemaVersion,attr"`
	RegisterPropertiesGroup *RegisterPropertiesGroup
	Vendor                  string            `xml:"vendor"`
	VendorID                string            `xml:"vendorID"`
	Name                    string            `xml:"name"`
	Series                  string            `xml:"series"`
	Version                 string            `xml:"version"`
	Description             string            `xml:"description"`
	LicenseText             string            `xml:"licenseText"`
	Cpu                     *CpuType          `xml:"cpu"`
	HeaderSystemFilename    string            `xml:"headerSystemFilename"`
	HeaderDefinitionsPrefix string            `xml:"headerDefinitionsPrefix"`
	AddressUnitBits         string            `xml:"addressUnitBits"`
	Width                   string            `xml:"width"`
	Peripherals             *Peripherals      `xml:"peripherals"`
	VendorExtensions        *VendorExtensions `xml:"vendorExtensions"`
}
